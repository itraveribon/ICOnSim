{"name":"IC-Onsim","tagline":"Extension of the similarity measure OnSim with Information Content","body":"# IC-OnSim\r\nExtension of the similarity measure OnSim with Information Content. A Similarity Measure for Determining Relatedness Between Ontology Terms.\r\n\r\n[1] Ignacio Traverso-Ribón, Maria-Esther Vidal and Guillermo Palma. A Similarity Measure for Determining Relatedness Between Ontology Terms. 11th  International Conference on Data Integration in the Life Sciences 2015 (DILS2015).\r\n\r\n[2] Ignacio Traverso-Ribón, Maria-Esther Vidal. Exploiting Information Content and Semantics to Accurately Computing Similarity of GO-based Annotated Entities. 2015 IEEE Conference on Computational Intelligence in Bioinformatics and Computational Biology\r\n\r\n[3] Palma, G.; Vidal, M. E.; Haag, E.; Raschid, L.; Thor, A. Measuring Relatedness Between Scientific Entities in Annotation Datasets. ACM International Conference on Bioinformatics, Computational Biology, and Biomedical Informatics (BCB), 2013\r\n\r\n\r\n# Setting up AnnSim-OnSim\r\nOnce you have downloaded the code from GitHub you only need to modify the file src/main/java/test/DatasetTest.java to run AnnSim-OnSim.\r\n\r\nIC-OnSim need as inputs:\r\n* An OWL Ontology.\r\n* A file describing the comparisons to be performed.\r\n* A file for each entity containing their annotations.\r\n\r\n## Comparison file\r\nThe comparison file follows the following format:\r\n\r\n    ENTITY1 ENTITY2\r\n    ENTITY1 ENTITY3\r\n    ENTITY3 ENTITY4\r\n\r\nEach line represents a pair of entities to be compared. These entities can be, e.g., proteins. In this case, the file will look like this:\r\n\r\n    Q9JKJ9\tQ9NYL5\r\n    Q9JKJ9\tQ60991\r\n    Q9JKJ9\tQ64505\r\n    Q9JKJ9\tP11511\r\n    Q9JKJ9\tP27786\r\n\r\n## Annotation files\r\nFor each entity present in the comparison file, AnnSim-OnSim needs a file containing its annotations. The annotations are terms from the given ontology. In case our entities are proteins annotated with the Gene Ontology, the file would look like this:\r\n\r\n    3\r\n    GO:0045454\r\n    GO:0006467\r\n    GO:0055114\r\n\r\nThe first line contains the number of annotations included in the file and each annotations is written in a different line.\r\n\r\n## Main example\r\n\r\n    Map<String, String> ontPrefix = new HashMap<String,String>();\r\n\t\tontPrefix.put(\"src/main/resources/dataset3/\", \"http://purl.org/obo/owl/GO#\");\r\n\t\tString prefix = \"src/main/resources/dataset3/\";\r\n\t\tString ontFile = prefix + \"goProtein/go.owl\"; // File containing the OWL Ontology\r\n\t\t\r\n\t\tMyOWLOntology o = new MyOWLOntology(ontFile, ontPrefix.get(prefix));\r\n\t\tString comparisonFile = \"src/main/resources/dataset3/proteinpairs.txt\"; // File containing the entity pairs to be compared.\r\n\r\n\t\tList<ComparisonResult> comparisons = readComparisonFile(comparisonFile);\r\n\t\tint counter = 0, total = comparisons.size();\r\n\r\n\t\tString[] files = {\"src/main/resources/dataset3/process_annt\"}; //Folder containing the annotations files\r\n\t\t\r\n\t\tfor (Iterator<ComparisonResult> i = comparisons.iterator(); i.hasNext();)\r\n\t\t{\r\n\t\t\tComparisonResult comp = i.next();\r\n\t\t\tdouble sim = 0;\r\n\t\t\tfor (String file:files)\r\n\t\t\t{\r\n\t\t\t\tSet<OWLConcept> a = getConceptAnnotations(comp.getConceptA(), file, o);\r\n\t\t\t\tSet<OWLConcept> b = getConceptAnnotations(comp.getConceptB(), file, o);\r\n\t\t\t\tAnnSim bpm = new AnnSim();\r\n\t\t\t\tdouble aux = bpm.matching(a, b, null, null); \r\n\t\t\t\tString s = comp.getConceptA() + \"\\t\" + comp.getConceptB() + \"\\t\" + aux;\r\n\t\t\t\tsim += aux;\r\n\t\t\t}\r\n\t\t\tcomp.setSimilarity(sim/files.length);\r\n\t\t\tSystem.out.println(comp + \"\\t\" + counter++ + \"/\" + total);\r\n\t\t}\r\n\t\t\r\n\r\n# License\r\nThis work is licensed under [GNU/GPL v2](https://www.gnu.org/licenses/gpl-2.0.html).\r\n","google":"UA-65418952-2","note":"Don't delete this file! It's used internally to help with page regeneration."}